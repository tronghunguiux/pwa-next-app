/* eslint-disable react/jsx-key */
/* eslint-disable @next/next/no-img-element */
/* eslint-disable @typescript-eslint/no-explicit-any */
import Template from "@/components/template/Template";
import Image from "next/image";
import Link from "next/link";
import { useEffect, useState } from "react";
import { fetchBanners } from "../getDataAPI/getBannerTopData";
import { fetchProducts } from "../getDataAPI/getProductTopData";

// Swiper
import { Swiper, SwiperSlide } from "swiper/react";
import { Navigation, Pagination, Autoplay } from "swiper/modules";
import "swiper/css";
import 'swiper/css/pagination';

export default function First() {
    const [banners, setBanners] = useState<any[]>([]);
    const [products, setProducts] = useState<any[]>([]);

    useEffect(() => {
        fetchBanners().then(setBanners);
        fetchProducts().then(setProducts)
    }, []);

    return (
        <>
            <Template
                    title="Title First page"
                    description="Generated by create next app first"
                    image="https://my-next-app.com/home-og-image.png"
                    classPage="first-page"
                    idPage="first_page"
                    linkcss={['/assets/cssmin/pages/top-page.css']}>
                <div className="block-container block-banner-top">
                    <Swiper
                        modules={[Navigation, Pagination, Autoplay]}
                        spaceBetween={0}
                        slidesPerView={1}
                        slidesPerGroup={1}
                        allowTouchMove={true}
                        mousewheel={true}
                        simulateTouch={true}
                        centeredSlides={true}
                        centeredSlidesBounds={true}
                        centerInsufficientSlides={true}
                        autoplay={{ delay: 3500, disableOnInteraction: false}}
                        pagination={{ clickable: true }}
                        navigation={false}
                        loop={true} 
                        className="slide-banner">
                        {banners.map((banner) => (
                            <SwiperSlide className={`${banner.class ?? ''} bannerTop`}>
                                <Link href={`/`} className={''}>
                                    <figure >
                                        <Image
                                            width={375}
                                            height={125}
                                            src={banner.imageUrl} 
                                            alt={banner.title}
                                            loading="eager"
                                            priority 
                                           />
                                        <div className="swiper-lazy-preloader swiper-lazy-preloader-white"></div>
                                    </figure>
                                </Link>
                            </SwiperSlide>
                        ))}
                    </Swiper>
                </div>
                <div className="product-list product-card product--type_grid">
                    {products.map((product) => (
                        <div className="product">
                            <a href={`/product/${product.product_id}`}>
                                <figure className="product-image">
                                    <img width="141" height="141" src="https://gc-img.webike.net/@wth-img/225x225/products/2025/03/04/th0748540-1.jpg" alt="Front Sprocket EX JTF404 S1000R / S1000RR / S1000XR (525) 17T - Webike Thailand" className="" />
                                </figure>
                                <div className="product-info">
                                    <ul className="product-tag tag-state">
                                        {
                                            product.sale_off && <li className="tagli sale-tag"> SALE <span>{product.sale_off}<i>%</i> </span> </li>
                                        }
                                        {product.tags && product.tags.map((status) => (
                                            <li className={`tagli line-height-sm ${status.class}`}>{status.label}</li>
                                        ))}
                                    </ul>
                                    <p className="brand dotted-line-1">{product.brand}</p>
                                    <p className="name dotted-line-2">{product.title}</p>
                                    <p className="price">
                                        <strong>{`NT$ ${product.prices}`}</strong>
                                    </p>
                                    {
                                        product.price_old && 
                                            <p className="old">{`NT$ ${product.price_old}`}</p>
                                    }

                                    {/* get point, same as  */}
                                    {
                                    product.get_point && 
                                        <p className="cash-point font-size-xs text-orange">{product.get_point}</p>
                                    }
                                    <div className="review">
                                        <p></p>
                                    </div>
                                </div>
                            </a>
                        </div>
                    ))}
                </div>
                {/* <Link href="/pokemon" className="line-height-lg d-block mt-1">
                    <button className="btn btn-outline-primary navigate-btn">Let&apos;s Catch Them All! Pok√©mon</button>
                </Link> */}
            </Template>
        </>
    );
}
